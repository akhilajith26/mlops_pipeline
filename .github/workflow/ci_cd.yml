# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
      
#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: '3.9'
    
#     - name: Install dependencies
#       run: pip install -r requirements.txt
    
#     - name: Run tests
#       run: pytest  # If you have any tests to run
    
#     - name: Log in to Docker Hub
#       run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
    
#     - name: Build Docker image
#       run: docker build -t your-dockerhub-username/your-repo-name .
    
#     - name: Push Docker image to Docker Hub
#       run: docker push your-dockerhub-username/your-repo-name

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
    
#     steps:
#     - name: Deploy to EC2
#       run: |
#         ssh -o StrictHostKeyChecking=no ec2-user@your-ec2-public-ip <<EOF
#           docker pull your-dockerhub-username/your-repo-name
#           docker stop $(docker ps -a -q)
#           docker run -d -p 8000:8000 your-dockerhub-username/your-repo-name
#         EOF

name: Build, Push, Deploy.

on:
  push:
    branches: [ main ]
jobs:
  build_and_push:
    name: Push docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          ecr: auto
          logout: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (labels, tags, etc.) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cardamagepredictor/fastapi
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: cardamagepredictor/fastapi:latest
          labels: ${{ steps.meta.outputs.labels }}